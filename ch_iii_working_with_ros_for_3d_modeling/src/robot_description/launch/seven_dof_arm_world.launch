<launch>

  <!-- These are the argumentos you can pass this launch file,
  for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server-->
  <param name="robot_description" 
    command="$(find xacro)/xacro --inorder $(find robot_description)/urdf/seven_dof_arm_gazebo_rviz.xacro"/>
  
  <!-- Run a python script to send a servide call to
  gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    args="-urdf -model seven_dof_arm -param robot_description"/>

  <!-- Start joint state publisher node -->
  <node 
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher"/>
  
  <!-- Combine joint values -->
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="state_publisher">
      <param name="use_gui" value="true"/>
  </node>

  <!-- Start Rviz -->
  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find robot_description)/rviz/urdf.rviz"
    required="true"/>


</launch>