<?xml version="1.0"?>
<robot name="differential_wheeled_robot" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find diff_robot_description)/urdf/materials.xacro"/>
    <xacro:include filename="$(find diff_robot_description)/urdf/diff_robot.gazebo"/>

    <!-- PROPERTY LIST-->
    <!-- Wheels -->
    <xacro:property name="wheel_radius" value="0.04" />
    <xacro:property name="wheel_height" value="0.02" />
    <xacro:property name="wheel_mass" value="2.5" /> <!-- in kg -->

    <xacro:property name="base_x_origin_to_wheel_origin" value="0.25" />
    <xacro:property name="base_y_origin_to_wheel_origin" value="0.3" />
    <xacro:property name="base_z_origin_to_wheel_origin" value="0.0" />

    <!--All units in m-kg-s-radians unit system -->
    <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="M_PI_2" value="1.570796327" />
    <xacro:property name="DEG_TO_RAD" value="0.017453293" />

    <!-- Main body cylinder base -->
    <xacro:property name="base_height" value="0.02" /> 
    <xacro:property name="base_radius" value="0.15" /> 
    <xacro:property name="base_mass" value="5.0" /> <!-- in kg-->

    <!-- caster wheel radius, height and mass -->
    <xacro:property name="caster_height" value="0.04" /> 
    <xacro:property name="caster_radius" value="0.025" /> 
    <xacro:property name="caster_mass" value="0.5" /> 

    <!-- Hokuyo Laser scanner -->
    <xacro:property name="hokuyo_size" value="0.05" />

    <!-- Macro for calculating inertia of cylinder -->
    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                 iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                 izz="${m*r*r/2}" /> 
    </xacro:macro>

    <!-- ROBOT LINKS -->
    <!-- Base footprint-->
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
    <link name="base_footprint"/>

    <!-- Base link -->
    <link name="base_link">
        <inertial>
            <mass value="${base_mass}" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.0001" ixy = "0" ixz = "0"
                     iyy="0.0001" iyz = "0"
                     izz="0.0001" />
            <cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
        </inertial>    
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="White" />
            <geometry>
                <cylinder length="${base_height}" radius="${base_radius}" />
            </geometry>
        </visual>  
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0 " />
            <geometry>
                <cylinder length="${base_height}" radius="${base_radius}" />
            </geometry>
        </collision>     
    </link>

    <!-- Caster front link -->
    <link name="caster_front_link">
        <visual>
            <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
            <geometry>
	    	    <sphere radius="${caster_radius}" />
            </geometry>
            <material name="Black" />
        </visual>  
        <collision>
            <geometry>
	    	    <sphere radius="${caster_radius}" />
            </geometry>
            <origin xyz="0 0.02 0" rpy="${M_PI/2} 0 0" />
        </collision>      
        <inertial>
          <mass value="${caster_mass}" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                   iyy="0.001" iyz="0.0" 
                   izz="0.001" />
        </inertial>
    </link>

    <!-- Caster back link -->
    <link name="caster_back_link">
        <visual>
            <origin xyz="0.02 0.02 0 " rpy="${M_PI/2} 0 0" /> 
            <geometry>
        		<sphere radius="${caster_radius}" />
            </geometry>
            <material name="Black" />
        </visual>  
        <collision>
            <geometry>
        		<sphere radius="${caster_radius}" />
            </geometry>
            <origin xyz="0.02 0.02 0 " rpy="${M_PI/2} 0 0" /> 
        </collision>      
        <inertial>
            <mass value="${caster_mass}" />
            <origin xyz="0 0 0" />        
            <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                     iyy="0.001" iyz="0.0" 
                     izz="0.001" />
        </inertial>
    </link>

    <!-- Right wheel -->
    <link name="right_wheel">
        <visual>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0  0 " /> 
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
              <material name="DarkGray" />
        </visual>
        <collision>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0 0 " />
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
        </collision>
        <inertial>
              <mass value="${wheel_mass}" />
              <origin xyz="0 0 0" />
    		<inertia ixx="0.001" ixy="0.0" ixz="0.0"
                       iyy="0.001" iyz="0.0" 
                       izz="0.001" />
        </inertial>
    </link>

    <!-- Left wheel -->
    <link name="left_wheel">
        <visual>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0  0 " /> 
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
              <material name="DarkGray" />
        </visual>
        <collision>
              <origin xyz="0 0 0" rpy="${-M_PI/2} 0 0 " />
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
        </collision>
        <inertial>
              <mass value="${wheel_mass}" />
              <origin xyz="0 0 0" />
    		<inertia ixx="0.001" ixy="0.0" ixz="0.0"
                       iyy="0.001" iyz="0.0" 
                       izz="0.001" />
        </inertial>
    </link>

    <!-- ROBOT JOINTS -->
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <joint name="caster_front_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_front_link"/>
        <origin xyz="0.115 0.0 0.007" rpy="${-M_PI/2} 0 0"/>
    </joint>

    <joint name="caster_back_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_back_link"/>
        <origin xyz="-0.135 0.0 0.009" rpy="${-M_PI/2} 0 0"/>
    </joint>

    <joint name="right_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="right_wheel"/>
      <origin xyz="0 ${-0.5 * base_y_origin_to_wheel_origin} ${base_z_origin_to_wheel_origin}" rpy="0 0 0" /> 
      <axis xyz="0 1 0" rpy="0 0 0" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.0" friction="0.0"/>
    </joint>

    <joint name="left_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="left_wheel"/>
      <origin xyz="0 ${0.5 * base_y_origin_to_wheel_origin} ${base_z_origin_to_wheel_origin}" rpy="0 0 0" /> 
      <axis xyz="0 1 0" rpy="0 0 0" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.0" friction="0.0"/>
    </joint>

    <!-- TRANSMISSION -->
    <transmission name="right_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_wheel_joint" />
        <actuator name="right_wheel_joint_motor">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="left_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_wheel_joint" />
        <actuator name="left_wheel_joint_motor">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

</robot>
